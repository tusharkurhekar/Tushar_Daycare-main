/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.neu.csye6200.views;


import edu.neu.csye6200.controller.StudentController;
import edu.neu.csye6200.controller.TeacherController;
import edu.neu.csye6200.controller.VaccinationController;
import edu.neu.csye6200.model.Classroom;
import edu.neu.csye6200.model.Student;
import edu.neu.csye6200.model.Teacher;
import edu.neu.csye6200.model.Vaccination;
import edu.neu.csye6200.service.ClassroomFactory;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.stream.Collectors;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

/**
 *
 * @author bipin
 */


@Component
public class AllDashboard extends javax.swing.JFrame {

    @Autowired
    TeacherController teacherController;
    @Autowired
    StudentController studentController;
    @Autowired
    VaccinationController vaccinationController;
    @Autowired
    ClassroomFactory classroomFactory;

    /**
     * Creates new form Students
     */
    public AllDashboard() {
        initComponents();
        this.studentsBoardPane.setVisible(false);
        this.teachersBoardPane.setVisible(false);
        this.vaccinationsBoardPane.setVisible(false);
        this.classroomBoardPane.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        EntitySelectionPane = new javax.swing.JPanel();
        studentsButton = new javax.swing.JButton();
        teachersButton = new javax.swing.JButton();
        classesButton = new javax.swing.JButton();
        immunizationButton = new javax.swing.JButton();
        centralPane = new javax.swing.JPanel();
        studentsBoardPane = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        tfId = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        tfAge = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        tfParentName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tfDate = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        tfParentContact = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableStudents = new javax.swing.JTable();
        Renewal = new java.awt.Button();
        teachersBoardPane = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        tfId1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        tfName1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        tfAge1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        tfCredits = new javax.swing.JTextField();
        btnAdd1 = new javax.swing.JButton();
        btnClear1 = new javax.swing.JButton();
        btnDelete1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableTeachers = new javax.swing.JTable();
        vaccinationsBoardPane = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        tfPersonId = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        tfVaccine1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        tfv1t1 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        tfv1t2 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        tfv2t1 = new javax.swing.JTextField();
        addVacButton = new javax.swing.JButton();
        clearVacButton = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        tfVaccine2 = new javax.swing.JTextField();
        deleteVacButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableVaccines = new javax.swing.JTable();
        Renewal1 = new java.awt.Button();
        classroomBoardPane = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableClassroom = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setText("Day Care Dashboard");
        getContentPane().add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jLabel2.setText("copy right rights by NEU");
        getContentPane().add(jLabel2, java.awt.BorderLayout.PAGE_END);

        EntitySelectionPane.setBackground(new java.awt.Color(153, 153, 153));
        EntitySelectionPane.setToolTipText("");
        EntitySelectionPane.setLayout(new java.awt.GridLayout(4, 1));

        studentsButton.setText("Students");
        studentsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentsButtonActionPerformed(evt);
            }
        });
        EntitySelectionPane.add(studentsButton);

        teachersButton.setText("Teachers");
        teachersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teachersButtonActionPerformed(evt);
            }
        });
        EntitySelectionPane.add(teachersButton);

        classesButton.setText("Classes");
        classesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classesButtonActionPerformed(evt);
            }
        });
        EntitySelectionPane.add(classesButton);

        immunizationButton.setText("Immunization");
        immunizationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                immunizationButtonActionPerformed(evt);
            }
        });
        EntitySelectionPane.add(immunizationButton);

        getContentPane().add(EntitySelectionPane, java.awt.BorderLayout.LINE_START);

        studentsBoardPane.setBackground(new java.awt.Color(0, 206, 235));

        jLabel3.setBackground(new java.awt.Color(153, 255, 153));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("List of Students:");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "New Student", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel3.setOpaque(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Id");

        tfId.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tfId.setToolTipText("");
        tfId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfIdActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Name");

        tfName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tfName.setToolTipText("");
        tfName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNameActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Age");

        tfAge.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tfAge.setToolTipText("");
        tfAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfAgeActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Parent Name");

        tfParentName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tfParentName.setToolTipText("");
        tfParentName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfParentNameActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Parent Contact");

        tfDate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tfDate.setToolTipText("");
        tfDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfDateActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Registration Date");

        tfParentContact.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tfParentContact.setToolTipText("");
        tfParentContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfParentContactActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tfAge, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(tfId)
            .addComponent(tfName, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tfParentName, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
            .addComponent(tfDate, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
            .addComponent(tfParentContact)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addGap(4, 4, 4)
                .addComponent(tfAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfParentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfParentContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnClear))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tableStudents.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tableStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Age", "Parent Name", "Parent Contact", "Reg_Date"
            }
        ));
        jScrollPane1.setViewportView(tableStudents);

        Renewal.setLabel("Renew");
        Renewal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RenewalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentsBoardPaneLayout = new javax.swing.GroupLayout(studentsBoardPane);
        studentsBoardPane.setLayout(studentsBoardPaneLayout);
        studentsBoardPaneLayout.setHorizontalGroup(
            studentsBoardPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentsBoardPaneLayout.createSequentialGroup()
                .addGroup(studentsBoardPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(studentsBoardPaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(studentsBoardPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(studentsBoardPaneLayout.createSequentialGroup()
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Renewal, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 110, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        studentsBoardPaneLayout.setVerticalGroup(
            studentsBoardPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentsBoardPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(studentsBoardPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(studentsBoardPaneLayout.createSequentialGroup()
                        .addGroup(studentsBoardPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Renewal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        teachersBoardPane.setBackground(new java.awt.Color(0, 206, 235));

        jLabel9.setBackground(new java.awt.Color(153, 255, 153));
        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("List of Teachers:");
        jLabel9.setToolTipText("");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "New Teacher", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel4.setOpaque(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Id");

        tfId1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tfId1.setToolTipText("");
        tfId1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfId1ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Name");

        tfName1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tfName1.setToolTipText("");
        tfName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfName1ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Age");

        tfAge1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tfAge1.setToolTipText("");
        tfAge1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfAge1ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Credits");

        tfCredits.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tfCredits.setToolTipText("");
        tfCredits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCreditsActionPerformed(evt);
            }
        });

        btnAdd1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAdd1.setText("Add");
        btnAdd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdd1ActionPerformed(evt);
            }
        });

        btnClear1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnClear1.setText("Clear");
        btnClear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClear1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tfAge1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(tfId1)
            .addComponent(tfName1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tfCredits, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(btnAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnClear1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 45, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfId1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfAge1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfCredits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd1)
                    .addComponent(btnClear1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnDelete1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDelete1.setText("Delete");
        btnDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete1ActionPerformed(evt);
            }
        });

        tableTeachers.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tableTeachers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Age", "Credits"
            }
        ));
        jScrollPane2.setViewportView(tableTeachers);

        javax.swing.GroupLayout teachersBoardPaneLayout = new javax.swing.GroupLayout(teachersBoardPane);
        teachersBoardPane.setLayout(teachersBoardPaneLayout);
        teachersBoardPaneLayout.setHorizontalGroup(
            teachersBoardPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teachersBoardPaneLayout.createSequentialGroup()
                .addGroup(teachersBoardPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(teachersBoardPaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(teachersBoardPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(teachersBoardPaneLayout.createSequentialGroup()
                                .addComponent(btnDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 198, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        teachersBoardPaneLayout.setVerticalGroup(
            teachersBoardPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teachersBoardPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(teachersBoardPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(teachersBoardPaneLayout.createSequentialGroup()
                        .addComponent(btnDelete1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        vaccinationsBoardPane.setBackground(new java.awt.Color(0, 206, 235));

        jLabel15.setBackground(new java.awt.Color(153, 255, 153));
        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("List of Vaccinations:");

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "New Vaccination", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        jPanel5.setOpaque(false);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("Id");

        tfPersonId.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tfPersonId.setToolTipText("");
        tfPersonId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPersonIdActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("Vaccine1");

        tfVaccine1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tfVaccine1.setToolTipText("");
        tfVaccine1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfVaccine1ActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setText("Dose1");

        tfv1t1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tfv1t1.setToolTipText("");
        tfv1t1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfv1t1ActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setText("Dose2");

        tfv1t2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tfv1t2.setToolTipText("");
        tfv1t2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfv1t2ActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setText("Vaccine2");

        tfv2t1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tfv2t1.setToolTipText("");
        tfv2t1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfv2t1ActionPerformed(evt);
            }
        });

        addVacButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addVacButton.setText("Add");
        addVacButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVacButtonActionPerformed(evt);
            }
        });

        clearVacButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        clearVacButton.setText("Clear");
        clearVacButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearVacButtonActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel21.setText("Dose1");

        tfVaccine2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tfVaccine2.setToolTipText("");
        tfVaccine2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfVaccine2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tfv1t1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(tfPersonId)
            .addComponent(tfVaccine1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tfv1t2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
            .addComponent(tfv2t1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(addVacButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(clearVacButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
            .addComponent(tfVaccine2)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfPersonId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfVaccine1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel18)
                .addGap(4, 4, 4)
                .addComponent(tfv1t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfv1t2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfVaccine2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfv2t1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addVacButton)
                    .addComponent(clearVacButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        deleteVacButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteVacButton.setText("Delete");
        deleteVacButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteVacButtonActionPerformed(evt);
            }
        });

        tableVaccines.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tableVaccines.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "personId", "vaccine1", "dose1", "dose2", "vaccine2", "dose1"
            }
        ));
        jScrollPane3.setViewportView(tableVaccines);

        Renewal1.setLabel("Alert");
        Renewal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Renewal1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout vaccinationsBoardPaneLayout = new javax.swing.GroupLayout(vaccinationsBoardPane);
        vaccinationsBoardPane.setLayout(vaccinationsBoardPaneLayout);
        vaccinationsBoardPaneLayout.setHorizontalGroup(
            vaccinationsBoardPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vaccinationsBoardPaneLayout.createSequentialGroup()
                .addGroup(vaccinationsBoardPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(vaccinationsBoardPaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(vaccinationsBoardPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(vaccinationsBoardPaneLayout.createSequentialGroup()
                                .addComponent(deleteVacButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Renewal1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 94, Short.MAX_VALUE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        vaccinationsBoardPaneLayout.setVerticalGroup(
            vaccinationsBoardPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vaccinationsBoardPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(vaccinationsBoardPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(vaccinationsBoardPaneLayout.createSequentialGroup()
                        .addGroup(vaccinationsBoardPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(deleteVacButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Renewal1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(7, Short.MAX_VALUE))
        );

        classroomBoardPane.setBackground(new java.awt.Color(0, 206, 235));

        tableClassroom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "classId", "ageGroup", "teacherList", "studentList"
            }
        ));
        jScrollPane4.setViewportView(tableClassroom);

        javax.swing.GroupLayout classroomBoardPaneLayout = new javax.swing.GroupLayout(classroomBoardPane);
        classroomBoardPane.setLayout(classroomBoardPaneLayout);
        classroomBoardPaneLayout.setHorizontalGroup(
            classroomBoardPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
        );
        classroomBoardPaneLayout.setVerticalGroup(
            classroomBoardPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout centralPaneLayout = new javax.swing.GroupLayout(centralPane);
        centralPane.setLayout(centralPaneLayout);
        centralPaneLayout.setHorizontalGroup(
            centralPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studentsBoardPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(centralPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(centralPaneLayout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(teachersBoardPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(centralPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(centralPaneLayout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(vaccinationsBoardPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(centralPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(centralPaneLayout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(classroomBoardPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        centralPaneLayout.setVerticalGroup(
            centralPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centralPaneLayout.createSequentialGroup()
                .addComponent(studentsBoardPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(centralPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(centralPaneLayout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(teachersBoardPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(centralPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(centralPaneLayout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(vaccinationsBoardPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(centralPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(centralPaneLayout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(classroomBoardPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        teachersBoardPane.getAccessibleContext().setAccessibleName("");

        getContentPane().add(centralPane, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hideAllPanes(java.awt.event.ActionEvent evt) {
        this.teachersBoardPane.setVisible(false);
        this.studentsBoardPane.setVisible(false);
        this.vaccinationsBoardPane.setVisible(false);
        this.classroomBoardPane.setVisible(false);

    }

    private void handleEntityPanes(java.awt.event.ActionEvent evt) {
        hideAllPanes(evt);
        if (evt.getSource() == studentsButton) {
            this.studentsBoardPane.setVisible(true);
            this.populateBodyStudent();

        } else if (evt.getSource() == teachersButton) {
            this.teachersBoardPane.setVisible(true);
            this.populateBodyTeacher();
        }else if (evt.getSource() == immunizationButton) {
            this.vaccinationsBoardPane.setVisible(true);
            this.populateBodyVaccinations();
        }else if (evt.getSource() == classesButton) {
            this.classroomBoardPane.setVisible(true);
            this.populateClassesInfo();
        }

    }

    private void populateBodyStudent() {

        List<Student> students = studentController.getAllStudents();

        if (students.size() == 0) {
            studentController.addDummyData();
            // add students to classes

            List<Student> newStudents = studentController.getAllStudents();
            newStudents.forEach(s -> {

                Classroom classRoom = ClassroomFactory.getClassRoom(s.getAge());
                classRoom.addStudentId(s.getId());

            });

        } else {
            DefaultTableModel model = (DefaultTableModel) tableStudents.getModel();

            if (model.getRowCount() == 0) {
                students.forEach(t -> {
                    model.addRow(new Object[]{t.getId(), t.getName(), t.getAge(), t.getParentName(), t.getPhoneNumber(), t.getRegistrationDate()});
//                      Classroom classRoom = ClassroomFactory.getClassRoom(t.getAge());
//                classRoom.addStudentId(t.getId());
                });
            }

        }
    }

    private void populateBodyVaccinations(){
        List<Vaccination> vaccinations = vaccinationController.getAllVaccines();

        if (vaccinations.size() == 0) {
            vaccinationController.addDummyData();
        } else {
            DefaultTableModel model = (DefaultTableModel) tableVaccines.getModel();

            if (model.getRowCount() == 0) {
                vaccinations.forEach(t -> {
                    model.addRow(new Object[]{t.getPersonID(), t.getVaccine(), t.getV1t1(), t.getV1t2(), t.getVaccine2(), t.getV2t1()});
                });
            }

        }
    }
        private void populateClassesInfo(){
            List<Classroom> classrooms = ClassroomFactory.getAllClassRooms();
            DefaultTableModel model = (DefaultTableModel) tableClassroom.getModel();
            model.setRowCount(0);
            //if (model.getRowCount() == 0) {
            classrooms.forEach(t -> {
                            model.addRow(new Object[]{t.getClassId(), t.getMin_age()+"-"+t.getMax_age(), Arrays.toString(t.getTeacherIdList().toArray()), Arrays.toString(t.getStudentIdList().toArray())});
                        });
            //}
    }
    private void studentsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentsButtonActionPerformed

        handleEntityPanes(evt);
    }//GEN-LAST:event_studentsButtonActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
//        int row = tableStudents.getSelectedRow();
//
//        if (row < 0 ) {
//            JOptionPane.showMessageDialog(this, "No Row is Selected", "Please Select Row", JOptionPane.ERROR_MESSAGE);
//        } else {
//            DefaultTableModel model = (DefaultTableModel)tableStudents.getModel();
//            model.removeRow(row);
//        }

        int row = tableStudents.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "No Row is Selected", "Please Select Row", JOptionPane.ERROR_MESSAGE);
        } else {
            //int pkid = (int)tableTeachers.getModel().getValueAt(row, 0);
            DefaultTableModel model = (DefaultTableModel) tableStudents.getModel();
//            String k = model.getValueAt(0, 0).toString();
//            System.err.println(k + " is about to deleted : " + row);

            int pkid = Integer.parseInt(model.getValueAt(row, 0).toString());
            model.removeRow(row);

            System.err.println(pkid + " is deleted : " + row);
            int age = studentController.getStudentById(pkid).get().getAge();
            studentController.deleteStudentById(pkid);

            Classroom classRoom = classroomFactory.getClassRoom(age);
            classRoom.removeStudentId(pkid);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tfId1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfId1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfId1ActionPerformed

    private void tfName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfName1ActionPerformed

    private void tfAge1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAge1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAge1ActionPerformed

    private void tfCreditsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCreditsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCreditsActionPerformed

    private void btnAdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdd1ActionPerformed
        // TODO add your handling code here:

        String id = tfId1.getText();
        String age = tfAge1.getText();
        String name = tfName1.getText();
        String credit = tfCredits.getText();

        if (id.isEmpty() || age.isEmpty() || name.isEmpty() || credit.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Enter All Fields", "Try Again", JOptionPane.ERROR_MESSAGE);
        } else {
            DefaultTableModel model = (DefaultTableModel) tableTeachers.getModel();
            model.addRow(new Object[]{id, name, age, credit});
        }

        tfId1.setText("");
        tfAge1.setText("");
        tfName1.setText("");
        tfCredits.setText("");

        // add to bin file
        // TODO add your handling code here:
//       DefaultTableModel model = (DefaultTableModel) tableTeachers.getModel();
//        Vector<Vector> tableData = model.getDataVector();
//        
//        // Saving the Object in a File
//        try{
//            FileOutputStream fos = 
//                    new FileOutputStream("D:\\code\\swing\\Final\\OOD_Final_Project_Daycare\\DayCare\\src\\com\\ood\\ui\\teachers.bin");
//            ObjectOutputStream oos = new ObjectOutputStream(fos);
//            
//            oos.writeObject(tableData);
//            oos.close();
//            fos.close();
//        } catch (Exception ex){
//            ex.printStackTrace();
//        }
        //push to db
        String csv = id + "," + name + "," + age + "," + credit;
        System.err.println(csv + "is added to teache db");
        teacherController.addTeacher(csv);
        // Adding teacher to last classroom
        ClassroomFactory.getAllClassRooms().get(ClassroomFactory.getAllClassRooms().size()-1).addTeacherId(Integer.parseInt(id));
    }//GEN-LAST:event_btnAdd1ActionPerformed

    private void btnClear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClear1ActionPerformed
        // TODO add your handling code here:
        tfId1.setText("");
        tfAge1.setText("");
        tfName1.setText("");
        tfCredits.setText("");
    }//GEN-LAST:event_btnClear1ActionPerformed

    private void btnDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete1ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        int row = tableTeachers.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "No Row is Selected", "Please Select Row", JOptionPane.ERROR_MESSAGE);
        } else {
            //int pkid = (int)tableTeachers.getModel().getValueAt(row, 0);
            DefaultTableModel model = (DefaultTableModel) tableTeachers.getModel();
//            String k = model.getValueAt(0, 0).toString();
//            System.err.println(k + " is about to deleted : " + row);

            int pkid = Integer.parseInt(model.getValueAt(row, 0).toString());
            model.removeRow(row);

            System.err.println(pkid + " is deleted : " + row);
            //int age = teacherController.getTeacherById(pkid).get().getAge();

            teacherController.deleteTeacherById(pkid);

//            Classroom classRoom = classroomFactory.getClassRoom(age);
//            classRoom.removeStudentId(pkid);
        }

    }//GEN-LAST:event_btnDelete1ActionPerformed

    private void teachersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teachersButtonActionPerformed
        // TODO add your handling code here:
        handleEntityPanes(evt);
    }//GEN-LAST:event_teachersButtonActionPerformed

    private void classesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classesButtonActionPerformed
        // TODO add your handling code here:
        handleEntityPanes(evt);
    }//GEN-LAST:event_classesButtonActionPerformed

    private void immunizationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_immunizationButtonActionPerformed
        // TODO add your handling code here:
        handleEntityPanes(evt);
    }//GEN-LAST:event_immunizationButtonActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        tfId.setText("");
        tfAge.setText("");
        tfName.setText("");
        tfParentName.setText("");
        tfParentContact.setText("");
        tfDate.setText("");
    }//GEN-LAST:event_btnClearActionPerformed


    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String id = tfId.getText();
        String age = tfAge.getText();
        String name = tfName.getText();
        String parentName = tfParentName.getText();
        String parentContact = tfParentContact.getText();
        String rd = tfDate.getText();

        Classroom classRoom = classroomFactory.getClassRoom(Integer.parseInt(age));
        System.out.print("classr room id is : " + classRoom.getClassId());

        int studentCount = classRoom.getStudentIdList().size();
        int teacherCount = classRoom.getTeacherIdList().size();

        float ratio = (float)studentCount / (float)teacherCount;
        System.out.println("counts in class beofr addition : "+ studentCount + " : "+ teacherCount);
        System.out.println("current ration of class will be : "+ ratio + " .Ideal : "+ classRoom.getGroupsize());

        if (ratio >= classRoom.getGroupsize()) {
            JOptionPane.showMessageDialog(this, "ClassRoom Limit is Reached", "Increase Teacher Count", JOptionPane.ERROR_MESSAGE);
        } else { 

            if (id.isEmpty() || age.isEmpty() || name.isEmpty() || parentName.isEmpty() || parentContact.isEmpty() || rd.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please Enter All Fields", "Try Again", JOptionPane.ERROR_MESSAGE);
            } else {
                DefaultTableModel model = (DefaultTableModel) tableStudents.getModel();
                model.addRow(new Object[]{id, name, age, parentName, parentContact, rd});
            }

            tfId.setText("");
            tfAge.setText("");
            tfName.setText("");
            tfParentName.setText("");
            tfParentContact.setText("");
            tfDate.setText("");

            String grade = "4";
            String addr = "Boston";
            String email = "kid@neu.edu";
            String csv = id + "," + name + "," + age + "," + grade + "," + rd + "," + parentName + "," + addr + "," + parentContact + "," + email;
            System.err.println(csv + "is added to student db");

            studentController.addStudent(csv);

            classRoom.addStudentId(Integer.parseInt(id));

            ClassroomFactory.showAllClassrooms();

        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void tfParentNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfParentNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfParentNameActionPerformed

    private void tfAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfAgeActionPerformed

    private void tfIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfIdActionPerformed

    private void tfDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfDateActionPerformed

    private void tfParentContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfParentContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfParentContactActionPerformed

    private void tfNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNameActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:

    }//GEN-LAST:event_formWindowClosed

    private void RenewalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RenewalActionPerformed
        // TODO add your handling code here:
        int row = tableStudents.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "No Row is Selected", "Please Select Row", JOptionPane.ERROR_MESSAGE);
        } else {
            //int pkid = (int)tableTeachers.getModel().getValueAt(row, 0);
            DefaultTableModel model = (DefaultTableModel) tableStudents.getModel();
//            String k = model.getValueAt(0, 0).toString();
//            System.err.println(k + " is about to deleted : " + row);

            int pkid = Integer.parseInt(model.getValueAt(row, 0).toString());
            //model.removeRow(row);

            System.err.println(pkid + " is selected : " + row);
            Date date = studentController.getStudentById(pkid).map(t -> t.getRegistrationDate()).get();
            Calendar c = Calendar.getInstance();
            c.setTime(date);
            c.add(Calendar.YEAR, 1);
            JOptionPane.showMessageDialog(this, c.getTime().toString(), " Next renewal date ", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_RenewalActionPerformed

    private void tfPersonIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPersonIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPersonIdActionPerformed

    private void tfVaccine1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfVaccine1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfVaccine1ActionPerformed

    private void tfv1t1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfv1t1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfv1t1ActionPerformed

    private void tfv1t2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfv1t2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfv1t2ActionPerformed

    private void tfv2t1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfv2t1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfv2t1ActionPerformed

    private void addVacButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVacButtonActionPerformed
        // TODO add your handling code here:
        String id = tfPersonId.getText();
        String vaccine1 = tfVaccine1.getText();
        String v1t1 = tfv1t1.getText();
        String v1t2 = tfv1t2.getText();
        String vaccine2 = tfVaccine2.getText();
        String v2t1 = tfv2t1.getText();

      

            if (id.isEmpty() || vaccine1.isEmpty() || v1t1.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please Enter Atleast 1 vaccination info", "Try Again", JOptionPane.ERROR_MESSAGE);
            } else {
                DefaultTableModel model = (DefaultTableModel) tableVaccines.getModel();
                model.addRow(new Object[]{id, vaccine1,v1t1, v1t2, vaccine2, v2t1});
            }

            tfPersonId.setText("");
            tfVaccine1.setText("");
            tfv1t1.setText("");
            tfv1t2.setText("");
            tfVaccine2.setText("");
            tfv2t1.setText("");

            String csv = id + "," + vaccine1 + "," + v1t1 + "," + v1t2 + "," + vaccine2 + "," + v2t1;
            System.err.println(csv + "is added to vaccine db");

            vaccinationController.addVaccine(csv);

    }//GEN-LAST:event_addVacButtonActionPerformed

    private void clearVacButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearVacButtonActionPerformed
        // TODO add your handling code here:
            tfPersonId.setText("");
            tfVaccine1.setText("");
            tfv1t1.setText("");
            tfv1t2.setText("");
            tfVaccine2.setText("");
            tfv2t1.setText("");
    }//GEN-LAST:event_clearVacButtonActionPerformed

    private void tfVaccine2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfVaccine2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfVaccine2ActionPerformed

    private void deleteVacButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteVacButtonActionPerformed
        // TODO add your handling code here:
        int row = tableVaccines.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "No Row is Selected", "Please Select Row", JOptionPane.ERROR_MESSAGE);
        } else {
            //int pkid = (int)tableTeachers.getModel().getValueAt(row, 0);
            DefaultTableModel model = (DefaultTableModel) tableVaccines.getModel();
//            String k = model.getValueAt(0, 0).toString();
//            System.err.println(k + " is about to deleted : " + row);

            int pkid = Integer.parseInt(model.getValueAt(row, 0).toString());
            model.removeRow(row);

            System.err.println(pkid + " is deleted : " + row);
            vaccinationController.deleteVaccineById(pkid);
           
        }
    }//GEN-LAST:event_deleteVacButtonActionPerformed

    private void Renewal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Renewal1ActionPerformed
        // TODO add your handling code here:
        int row = tableVaccines.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "No Row is Selected", "Please Select Row", JOptionPane.ERROR_MESSAGE);
        } else {
            //int pkid = (int)tableTeachers.getModel().getValueAt(row, 0);
            DefaultTableModel model = (DefaultTableModel) tableVaccines.getModel();
//            String k = model.getValueAt(0, 0).toString();
//            System.err.println(k + " is about to deleted : " + row);

            int pkid = Integer.parseInt(model.getValueAt(row, 0).toString());
            //model.removeRow(row);

            System.err.println(pkid + " is selected : " + row);
            Vaccination vaccination = vaccinationController.getVaccinesById(pkid).get();
            if(vaccination.getVaccine() == null && vaccination.getVaccine2() == null){
                JOptionPane.showMessageDialog(this, "Student is to be vaccinated", "Vaccination alert", JOptionPane.ERROR_MESSAGE);
            }else if(vaccination.getV1t2() == null){
            Calendar c = Calendar.getInstance();
            c.setTime(vaccination.getV1t1());
            c.add(Calendar.MONTH, 3);
            JOptionPane.showMessageDialog(this, c.getTime().toString(), " Next Immunization date(Dose 2)", JOptionPane.ERROR_MESSAGE);
                //JOptionPane.showMessageDialog(this, "Student is to be vaccinated", "Vaccine1 dose 2 missing alert", JOptionPane.ERROR_MESSAGE);
            } else if(vaccination.getVaccine2() == null){
            Calendar c = Calendar.getInstance();
            c.setTime(vaccination.getV1t1());
            c.add(Calendar.YEAR, 1);
            JOptionPane.showMessageDialog(this, c.getTime().toString(), " Next Immunization date(Vaccine 2)", JOptionPane.ERROR_MESSAGE);
                //JOptionPane.showMessageDialog(this, "Student is to be vaccinated", "Vaccine2 missing alert", JOptionPane.ERROR_MESSAGE);
            }
//            Calendar c = Calendar.getInstance();
//            c.setTime(date);
//            c.add(Calendar.YEAR, 1);
//            JOptionPane.showMessageDialog(this, c.getTime().toString(), " Next renewal date ", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_Renewal1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AllDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel EntitySelectionPane;
    private java.awt.Button Renewal;
    private java.awt.Button Renewal1;
    private javax.swing.JButton addVacButton;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAdd1;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClear1;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDelete1;
    private javax.swing.JPanel centralPane;
    private javax.swing.JButton classesButton;
    private javax.swing.JPanel classroomBoardPane;
    private javax.swing.JButton clearVacButton;
    private javax.swing.JButton deleteVacButton;
    private javax.swing.JButton immunizationButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel studentsBoardPane;
    private javax.swing.JButton studentsButton;
    private javax.swing.JTable tableClassroom;
    private javax.swing.JTable tableStudents;
    private javax.swing.JTable tableTeachers;
    private javax.swing.JTable tableVaccines;
    private javax.swing.JPanel teachersBoardPane;
    private javax.swing.JButton teachersButton;
    private javax.swing.JTextField tfAge;
    private javax.swing.JTextField tfAge1;
    private javax.swing.JTextField tfCredits;
    private javax.swing.JTextField tfDate;
    private javax.swing.JTextField tfId;
    private javax.swing.JTextField tfId1;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfName1;
    private javax.swing.JTextField tfParentContact;
    private javax.swing.JTextField tfParentName;
    private javax.swing.JTextField tfPersonId;
    private javax.swing.JTextField tfVaccine1;
    private javax.swing.JTextField tfVaccine2;
    private javax.swing.JTextField tfv1t1;
    private javax.swing.JTextField tfv1t2;
    private javax.swing.JTextField tfv2t1;
    private javax.swing.JPanel vaccinationsBoardPane;
    // End of variables declaration//GEN-END:variables

    private void populateBodyTeacher() {
        List<Teacher> teachers = teacherController.getAllTeachers();

        if (teachers.size() == 0) {
            teacherController.addDummyData();

            // Add teachers to classroom
            List<Teacher> newTeachers = teacherController.getAllTeachers();
            List<Classroom> allClassRooms = ClassroomFactory.getAllClassRooms();
            int counter = 0;
            try {
                for (Classroom classroom : allClassRooms) {
                    int tempCounter = 0;
                    while (tempCounter < classroom.getMaxGroups()) {
                        classroom.addTeacherId(newTeachers.get(counter + tempCounter).getId());
                        tempCounter++;
                    }
                    counter += tempCounter;
                }
            } catch (Exception ex) {
                System.out.println("****** Not Enough Teachers. Please Add at least 16 teachers ****");
                System.exit(1);
            }

        } else {
            DefaultTableModel model = (DefaultTableModel) tableTeachers.getModel();

            if (model.getRowCount() == 0) {
                teachers.forEach(t -> {
                    model.addRow(new Object[]{t.getId(), t.getName(), t.getAge(), t.getCredits()});
                });
//List<Classroom> allClassRooms = ClassroomFactory.getAllClassRooms();
//            int counter = 0;
//            try {
//                for (Classroom classroom : allClassRooms) {
//                    int tempCounter = 0;
//                    while (tempCounter < classroom.getMaxGroups()) {
//                        classroom.addTeacherId(teachers.get(counter + tempCounter).getId());
//                        tempCounter++;
//                    }
//                    counter += tempCounter;
//                }
//            } catch (Exception ex) {
//                System.out.println("****** Not Enough Teachers. Please Add at least 16 teachers ****");
//                System.exit(1);
//            }
            }

        }

    }
}
